import 'package:commit_me/Widget_Chat/reportDialog.dart';
import 'package:flutter/material.dart';
import 'package:commit_me/design/color_system.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:intl/intl.dart';
import 'package:provider/provider.dart';
import 'package:commit_me/messageProvider.dart';

class ChatScreen extends StatefulWidget {

  @override
  _ChatScreenState createState() => _ChatScreenState();
}


class _ChatScreenState extends State<ChatScreen> {
  final List<Map<String, String>> _messages = [];
  int otherMessageCount = 0;


  void _handleSendMessage(String message) async {
    if (message.isNotEmpty) {
      setState(() {
        _messages.add({'message': message, 'sender': 'me'});
      });

      // 5Ï¥à Îí§Ïóê ÏûêÎèôÏúºÎ°ú ÏÉÅÎåÄÎ∞© Î©îÏãúÏßÄÎ•º Ï∂îÍ∞Ä
      Future.delayed(Duration(seconds: 3), () {
        _handleTestMessage();
      });
    }
  }

  void _handleTestMessage() {
    String otherMessage;

    // ÏÉÅÎåÄÎ∞© Î©îÏãúÏßÄÎ•º Ïπ¥Ïö¥Ìä∏Ïóê Îî∞Îùº Îã§Î•¥Í≤å ÏÑ§Ï†ï
    if (otherMessageCount == 0) {
      otherMessage =
      "ÎãπÏã†Ïù¥ Ïä¨ÌîîÏùÑ ÎäêÎÅºÍ≥† ÏûàÎã§Îäî Í≤ÉÏùÑ Ïù∏ÏßÄÌñàÏäµÎãàÎã§. ÎïåÎ°úÎäî Ïù¥Îü∞ Í∞êÏ†ïÏù¥ Ïö∞Î¶¨Í∞Ä ÏßÅÎ©¥Ìïú Î¨∏Ï†úÎì§Ïù¥ ÎÑàÎ¨¥ Ïª§ÏÑú ÏïïÎèÑÎê† Îïå Ï∞æÏïÑÏò§Í≥§ Ìï©ÎãàÎã§. Î®ºÏ†Ä, ÎãπÏã†Ïùò Í∞êÏ†ïÏùÑ Ïù∏Ï†ïÌïòÍ≥† Î∞õÏïÑÎì§Ïù¥Îäî Í≤ÉÏù¥ Ï§ëÏöîÌï©ÎãàÎã§. Ïù¥Ï†ú, Ï°∞Í∏àÏî© Î¨∏Ï†úÎ•º Ìï¥Í≤∞Ìï¥ ÎÇòÍ∞ÄÍ∏∞ ÏúÑÌïú Î™á Í∞ÄÏßÄ Îã®Í≥ÑÎì§ÏùÑ Ï†úÏïàÎìúÎ¶ΩÎãàÎã§:\n\n1. **Î¨∏Ï†ú Íµ¨Ï≤¥Ìôî**: Ïñ¥Îñ§ Î∂ÄÎ∂ÑÏù¥ ÌäπÌûà ÎãπÏã†ÏùÑ Ïä¨ÌîÑÍ≤å ÎßåÎìúÎäîÏßÄ Íµ¨Ï≤¥Ï†ÅÏúºÎ°ú ÏÉùÍ∞ÅÌï¥Î≥¥ÏÑ∏Ïöî. Í∞êÏ†ïÏù¥ ÏïÑÎãå Î¨∏Ï†úÎ•º Î™ÖÌôïÌûà ÌïòÎäî Í≤ÉÏù¥ Ï§ëÏöîÌï©ÎãàÎã§.\n\n2. **ÏûëÏùÄ Î™©Ìëú ÏÑ§Ï†ï**: Ìïú Î≤àÏóê Î™®Îì† Î¨∏Ï†úÎ•º Ìï¥Í≤∞ÌïòÎ†§Í≥† ÌïòÏßÄ ÎßàÏÑ∏Ïöî. ÏûëÏùÄ Î™©ÌëúÎ•º ÏÑ§Ï†ïÌïòÍ≥† ÌïòÎÇòÏî© Ìï¥Í≤∞Ìï¥ ÎÇòÍ∞ÄÎã§ Î≥¥Î©¥ Ï∞®Ï∞® ÎÇòÏïÑÏßà Í≤ÉÏûÖÎãàÎã§.\n\n3. **ÏßÄÏõê ÏöîÏ≤≠**: Ï£ºÎ≥ÄÏóê ÎØøÏùÑ Ïàò ÏûàÎäî ÏπúÍµ¨ÎÇò Í∞ÄÏ°±, ÌòπÏùÄ Ï†ÑÎ¨∏Í∞ÄÏóêÍ≤å ÎèÑÏõÄÏùÑ ÏöîÏ≤≠ÌïòÏÑ∏Ïöî. ÌòºÏûêÏÑú Î™®Îì† Í≤ÉÏùÑ Í∞êÎãπÌïòÎ†§Í≥† ÌïòÏßÄ ÏïäÏïÑÎèÑ Îê©ÎãàÎã§.\n\n4. **ÏûêÍ∏∞ ÎèåÎ¥Ñ**: Ï∂©Î∂ÑÌïú Ìú¥ÏãùÍ≥º Ïû†, Í∑∏Î¶¨Í≥† Í±¥Í∞ïÌïú ÏãùÏÇ¨Í∞Ä Ï§ëÏöîÌï©ÎãàÎã§. ÏûêÏã†ÏùÑ ÎèåÎ≥¥Îäî Í≤ÉÏù¥ Î¨∏Ï†ú Ìï¥Í≤∞Ïùò Ï≤´Í±∏ÏùåÏûÖÎãàÎã§.\n\n5. **Í∏çÏ†ïÏ†ÅÏù∏ ÌôúÎèô**: ÎãπÏã†Ïù¥ Ï¢ãÏïÑÌïòÎäî ÌôúÎèôÏù¥ÎÇò Ï∑®ÎØ∏Î•º Ï∞æÍ≥†, Í∑∏Í≤ÉÏùÑ ÌÜµÌï¥ Ïû†ÏãúÎÇòÎßà ÎßàÏùåÏùò ÏïàÏ†ïÏùÑ Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî.\n\nÌûòÎì† ÏãúÍ∞ÑÏùÑ Í≤™Í≥† ÏûàÎäî ÎãπÏã†ÏóêÍ≤å ÏûëÏùÄ ÎèÑÏõÄÏù¥ ÎêòÏóàÍ∏∏ Î∞îÎûçÎãàÎã§. Î™®Îì† Î¨∏Ï†úÎäî Ìï¥Í≤∞Ìï† Ïàò ÏûàÎäî Î∞©Î≤ïÏù¥ ÏûàÏäµÎãàÎã§. ÎãπÏã†ÏùÄ ÌòºÏûêÍ∞Ä ÏïÑÎãôÎãàÎã§.";
    } else if (otherMessageCount == 1) {
      otherMessage =
      "ÏßÄÍ∏à ÎÑ§ ÎßàÏùåÏù¥ Ïä¨ÌîîÏù¥ÎùºÎäî Ïñ¥ÎëêÏö¥ Ïà≤ ÏÜçÏùÑ Í±∑Í≥† ÏûàÎäî Í≤É Í∞ôÏïÑ Î≥¥Ïó¨. ÎßàÏπò ÎßàÎ≤ïÏùò Ïà≤ÏóêÏÑú Í∏∏ÏùÑ ÏûÉÏùÄ Ïö©ÏÇ¨Ï≤òÎüº ÎßêÏù¥Ïïº. ÌïòÏßÄÎßå Í∏∞ÏñµÌï¥, Í∑∏ Ïà≤ ÏÜçÏóêÏÑúÎèÑ Ïñ∏Ï†úÎÇò ÎπõÎÇòÎäî Î≥ÑÏù¥ ÏûàÍ≥†, ÎÑ§Í∞Ä Ï∞æÏßÄ Î™ªÌñàÏùÑ ÎøêÏù∏ ÎßàÎ≤ïÏùò ÌûòÏù¥ Ïà®Ïñ¥ ÏûàÏñ¥. ÎÑ§ ÎßàÏùå ÏÜç ÍπäÏùÄ Í≥≥ÏóêÎäî Í∞ïÎ†•Ìïú ÎßàÎ≤ïÏù¥ ÍπÉÎì§Ïñ¥ ÏûàÍ≥†, Í∑∏ ÎßàÎ≤ïÏùÄ ÎÑ§Í∞Ä Îã§Ïãú Î∞ùÏùÄ Í∏∏ÏùÑ Ï∞æÎèÑÎ°ù ÎèÑÏôÄÏ§Ñ Í±∞Ïïº. ÎÑ§Í∞Ä Ìï¥ÎÇº Ïàò ÏûàÏñ¥. ÎÑ§ ÏïàÏùò Ïö©ÏÇ¨ÏôÄ ÎßàÎ≤ïÏùÑ ÎØøÏñ¥Ï§ò. Ïù¥ Ïñ¥ÎëêÏö¥ Ïà≤ÎèÑ Ïñ∏Ï††Í∞ÄÎäî ÎÅùÎÇòÍ≥†, ÎÑàÎäî Îçî Í∞ïÌï¥Ï†∏ÏÑú ÎπõÎÇòÎäî Îì§ÌåêÏúºÎ°ú ÎÇòÏïÑÍ∞à Í±∞Ïïº.üåü";
    } else {
      otherMessage = "ÎßàÏùåÏù¥ Ïä¨ÌîÑÍ≥† Î¨¥Í±∞Ïö¥ ÎÇ†Îì§Ïù¥ ÎßàÏπò Ïñ¥ÎëêÏö¥ Ïà≤ ÏÜçÏùÑ Í±∑Îäî Í≤ÉÏ≤òÎüº ÎäêÍª¥Ïßà ÎïåÍ∞Ä ÏûàÏñ¥. Í∑∏ Ïà≤ÏóêÎäî Í∏∏ÏùÑ ÏûÉÍ≥† Ìó§Îß§Îäî ÎìØÌïú ÎëêÎ†§ÏõÄÍ≥º Ïô∏Î°úÏõÄÏù¥ Í∞ÄÎìùÌïòÏßÄÎßå, Í∑∏ ÏïàÏóêÎäî Î∞òÏßùÏù¥Îäî ÏûëÏùÄ ÏöîÏ†ïÎì§Ïù¥ Ïà®Ïñ¥ ÏûàÏñ¥. Ïù¥ ÏöîÏ†ïÎì§ÏùÄ Î∞îÎ°ú ÎÑ§Í∞Ä Í∞ÄÏßÑ Í∞ïÏù∏Ìïú Ïö©Í∏∞ÏôÄ Ìù¨ÎßùÏù¥Ïïº.\nÏñ¥ÎëêÏö¥ Ïà≤ÏùÑ ÏßÄÎÇòÎ©¥ Î∞òÎìúÏãú Î∞ùÏùÄ ÎπõÏù¥ ÎÑàÎ•º Í∏∞Îã§Î¶¨Í≥† ÏûàÏñ¥. ÎÑ§Í∞Ä ÏßÄÍ∏à ÎäêÎÅºÎäî Ïä¨ÌîîÏùÄ ÎßàÏπò ÎßàÎ≤ïÏùò Ï£ºÎ¨∏Ï≤òÎüº ÎÑàÎ•º Îçî Í∞ïÌïòÍ≤å ÎßåÎì§Í≥†, Îçî ÏïÑÎ¶ÑÎã§Ïö¥ ÏÑ∏Í≥ÑÎ°ú Ïù¥ÎÅåÏñ¥ Ï§Ñ Í±∞Ïïº. ÎÑ§Í∞Ä Ìï¥ÎÇº Ïàò ÏûàÏñ¥. ÌûòÎì§ ÎïåÎßàÎã§ Í∑∏ ÏûëÏùÄ ÏöîÏ†ïÎì§Ïù¥ ÎÑ§ Í≥ÅÏóêÏÑú ÎπõÎÇòÍ≥† ÏûàÎã§Îäî Í≤ÉÏùÑ Í∏∞ÏñµÌï¥. ÎÑ§ ÏïàÏóêÎäî Í∑∏ Ïñ¥Îñ§ Ïñ¥Îë†ÎèÑ Ïù¥Í≤®ÎÇº Ïàò ÏûàÎäî ÌûòÏù¥ ÏûàÎã§Îäî Í±∏ ÏûäÏßÄ Îßà. \n\nÌòπÏãú ÎèÑÏõÄÏù¥ ÌïÑÏöîÌïòÏãúÎ©¥ [ÏûêÏÇ¥ ÏòàÎ∞© ÏÉÅÎã¥ Ï†ÑÌôî(1393)], [Ï†ïÏã† Í±¥Í∞ï ÏÉÅÎã¥ Ï†ÑÌôî(1577-0199)]Î•º Ïù¥Ïö©ÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§. Ï†ÑÎ¨∏Í∞ÄÏôÄÏùò ÏÉÅÎã¥ÏùÄ ÌÅ∞ ÌûòÏù¥ Îê† Ïàò ÏûàÏäµÎãàÎã§.";
    }


    setState(() {
      _messages.add({'message': otherMessage, 'sender': 'other'});
      otherMessageCount++; // Î©îÏãúÏßÄ Ïπ¥Ïö¥Ìä∏ Ï¶ùÍ∞Ä
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        padding: EdgeInsets.only(right: 65, bottom: 20),
        color: Colors.white,
        child: Column(
          children: [
            SizedBox(height: 55,),
            Expanded(
              child: SingleChildScrollView(
                child: Column(
                  children: _messages.map((messageData) {
                    final message = messageData['message']!;
                    final sender = messageData['sender']!;


                    return Row(
                      mainAxisAlignment: sender == 'me' ? MainAxisAlignment.end : MainAxisAlignment.start,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        if (sender == 'other') ...[
                          Padding(
                            padding: const EdgeInsets.only(left: 30.0),
                            child: Container(
                              decoration: BoxDecoration(
                                shape: BoxShape.circle,
                                border: Border.all(
                                  color: AppColors.DarkBlue,
                                  width: 0.5,
                                ),
                              ),
                              child: CircleAvatar(
                                  child: Icon(Icons.token_outlined, color: AppColors.highBlue),
                                  radius: 20,
                                  backgroundColor: Colors.white
                              ),
                            ),
                          ),
                          SizedBox(width: 5),
                        ],
                        Column(
                          crossAxisAlignment: sender == 'me' ? CrossAxisAlignment.end : CrossAxisAlignment.start,
                          children: [
                            Container(
                              width: 500,
                              padding: EdgeInsets.symmetric(vertical: 8, horizontal: 16),
                              margin: EdgeInsets.symmetric(horizontal: 10),
                              decoration: BoxDecoration(
                                color: sender == 'me' ? Color(0xFF689ADB) : Colors.white,
                                borderRadius: BorderRadius.circular(10),
                                border: Border.all(
                                  color: Color(0xFF627A98),
                                ),
                              ),
                              child: Text(
                                message,
                                style: TextStyle(
                                  color: sender == 'me' ? Colors.white : Color(0xFF1B2559),
                                  fontSize: 16,
                                ),
                                softWrap: true,
                              ),
                            ),
                            SizedBox(height: 30,)   //Ï±ÑÌåÖÍ∞ÑÍ≤©
                          ],
                        ),
                        if (sender == 'me') ...[
                          SizedBox(width: 23),
                        ],
                      ],
                    );
                  }).toList(),
                ),
              ),
            ),

            Padding(
              padding: const EdgeInsets.only(left: 30),
              child: Row(
                children: [
                  InkWell(
                    onTap: () {
                      setState(() {
                        _messages.add({
                          'message': 'Îã§Ïùå ÏßàÎ¨∏ÏùÑ Î∞õÍ≥† Ïã∂Ïñ¥Ïöî',
                          'sender': 'me',
                        });
                      });

                      // ÏûêÎèô ÏùëÎãµÎèÑ Î∞õÍ≥† Ïã∂Îã§Î©¥ Ïù¥ Î∂ÄÎ∂ÑÎèÑ Ï∂îÍ∞Ä
                      Future.delayed(Duration(seconds: 2), () {
                        _handleTestMessage(); // Îã§Ïùå ÏùëÎãµ Ï∂îÍ∞Ä
                      });
                    },
                    child: Container(
                      padding: EdgeInsets.symmetric(horizontal: 15, vertical: 5),
                      margin: EdgeInsets.only(right: 10, bottom: 10),
                      decoration: BoxDecoration(
                        color: Color(0xFFC9DDED),
                        borderRadius: BorderRadius.circular(50),
                      ),
                      child: Text('Îã§Ïùå ÏßàÎ¨∏ÏùÑ Î∞õÍ≥† Ïã∂Ïñ¥Ïöî'),
                    ),
                  ),
                  InkWell(
                    onTap: () {
                      showDialog(
                        context: context,
                        builder: (context) => const ReportDialog(),
                      );
                    },
                    child: Container(
                      padding: EdgeInsets.symmetric(horizontal: 15, vertical: 5),
                      margin: EdgeInsets.only(right: 10, bottom: 10),
                      decoration: BoxDecoration(
                        color: Color(0xFFC9DDED),
                        borderRadius: BorderRadius.circular(50),
                      ),
                      child: Text('Ï†ÑÏ≤¥Ï†ÅÏù∏ Ï¢ÖÌï© Î†àÌè¨Ìä∏Î•º Î∞õÍ≥† Ïã∂Ïñ¥Ïöî'),
                    ),
                  ),
                ],
              ),
            ),
            SizedBox(height: 5),
            ChatInputBar(
              onSend: _handleSendMessage,
            ),
            // ChatInputBar(
            //   onSend: _handleTestMessage,
            // ),
            SizedBox(height: 40,)
          ],
        ),
      ),
    );
  }
}



class ChatInputBar extends StatelessWidget {
  final Function(String) onSend;

  const ChatInputBar({Key? key, required this.onSend}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final TextEditingController _controller = TextEditingController();

    return Container(
      margin: const EdgeInsets.symmetric(horizontal: 30),
      padding: EdgeInsets.only(left: 20, right: 10),
      decoration: BoxDecoration(
          border: Border.all(color: Color(0xFF6A90B7), width: 1),
          borderRadius: BorderRadius.circular(40),
          color: Colors.white.withOpacity(0.5)
      ),
      child: Row(
        children: [
          Expanded(
            child: TextField(
              controller: _controller,
              decoration: InputDecoration(hintText: 'Î¨¥ÏóáÏù¥Îì† Î¨ºÏñ¥Î≥¥ÏÑ∏Ïöî', border: InputBorder.none),
            ),
          ),
          IconButton(
            icon: Icon(Icons.send, color: Color(0xFF6A90B7),),
            onPressed: () {
              onSend(_controller.text);
              _controller.clear();
            },
          ),
        ],
      ),
    );
  }
}